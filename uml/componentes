@startuml
title "Seu Cantinho — Monólito em Camadas (Fluxo: Rotas → Middlewares → Controllers → Persistência)"

skinparam componentStyle rectangle
skinparam packageStyle rectangle

actor Admin
actor Cliente

' ================= CAMADA 1: FRONTEND =================
package "Front-end (Web/App)" as FE {
  [Web UI] as Web
}

' ================= CAMADA 2: BACKEND ==================
node "Back-end (API REST Monólito)" as API {

  [Rotas / Registro de Endpoints] as ROUTES

  package "Middlewares" as MWS {
    [Autenticação (JWT)]
    [Permissões]
  }

  package "Controllers (HTTP/JSON)" as Ctrls {
    [BranchesController]
    [PaymentController]
    [ReportsController]
    [ReservationsController]
    [SpacesController]
    [UsersController]
  }
}

' ================= CAMADA 3: DADOS =====================
package "Camada de Dados (Persistência)" as DATA {
    database "Banco de Dados Relacional" as DB
    cloud "Armazenamento de Objetos (Fotos)" as OBJ
}

' ---- Atores / Frontend ----
Admin  --> Web : usa
Cliente --> Web : usa

' ---- Fluxo da requisição ----
Web --> ROUTES : HTTP/JSON (porta 5000)

' ---- Rotas aplicam middlewares antes dos controllers ----
ROUTES --> MWS
MWS --> Ctrls

' ---- Controllers -> persistência ----
BranchesController      --> DB
PaymentController       --> DB
ReportsController       --> DB
ReservationsController  --> DB
SpacesController        --> DB
UsersController         --> DB

SpacesController        --> OBJ

' ---- Notas ----
note right of ROUTES
app.ts (ou equivalente)
agrega e registra endpoints
end note

note right of MWS
- /users/login e /users/signup NÃO usam JWT
- login gera JWT
- demais rotas usam JWT + permissões
- não há validação de payload
end note

note right of DB
Tabelas:
- branches
- payments
- reservations
- spaces
- users
- photos
end note

@enduml