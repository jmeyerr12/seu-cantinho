networks:
  seu-cantinho-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:

services:
  backend:
    container_name: seu-cantinho-api
    build:
      context: ./backend
      dockerfile: Containerfile
    env_file:
      - ./backend/.env
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - seu-cantinho-network

  db:
    image: postgres:16
    container_name: seu_cantinho_db
    environment:
      POSTGRES_USER: seucantinho
      POSTGRES_PASSWORD: seucantinho
      POSTGRES_DB: seucantinho
    ports:
      - "5431:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - seu-cantinho-network

  minio:
    image: minio/minio:latest
    container_name: seu-cantinho-minio
    command: server --console-address ":9001" /data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - seu-cantinho-network

  minio-setup:
    image: minio/mc:latest
    container_name: seu-cantinho-minio-setup
    depends_on:
      - minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - S3_ACCESS_KEY_ID=appkey
      - S3_SECRET_ACCESS_KEY=appsecret
      - S3_PHOTO_BUCKET=photos

    entrypoint: >
      /bin/sh -c "
      until (mc alias set local http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD) do
        echo 'Aguardando MinIO...'; sleep 2;
      done &&
      mc mb -p local/$$S3_PHOTO_BUCKET || true &&
      mc admin user add local $$S3_ACCESS_KEY_ID $$S3_SECRET_ACCESS_KEY || true &&
      mc admin policy attach local readwrite --user $$S3_ACCESS_KEY_ID &&
      echo 'Buckets criados e usu√°rio pronto!'"
    networks:
      - seu-cantinho-network

